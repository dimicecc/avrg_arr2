name: Build and Package Avrg Arrays

on:
  pull_request:
    branches:
      - main

jobs:
  RunMake:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential g++

      - name: Build the project
        run: |
          cd src
          make
          make install
          make clean
          cd ..


      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: avrg_arrays_binary
          path: usr/bin/avrg_arrays

  RunTest:
    runs-on: ubuntu-latest
    needs: RunMake
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: avrg_arrays_binary
          path: usr/bin

      - name: Run tests
        run: |
          chmod +x usr/bin/avrg_arrays
          chmod +x cicd/tests/test_arr.sh
          ./cicd/tests/test_arr.sh

  RunPackage:
    runs-on: ubuntu-latest
    needs: RunTest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: avrg_arrays_binary
          path: usr/bin

      - name: Make binary executable
        run: chmod +x usr/bin/avrg_arrays

      - name: Clean up unnecessary files
        run: rm -rf .git

      - name: Package into .deb
        run: dpkg-deb --build . avrg-arrays_1.0_all.deb

      - name: Upload .deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: avrg-arrays
          path: avrg-arrays_1.0_all.deb



  deploy:
    runs-on: ubuntu-latest
    needs: RunPackage
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: avrg-arrays
          path: .
  
      - name: Make .deb executable files executable
        run: |
          dpkg-deb -x avrg-arrays_1.0_all.deb .
          chmod +x ./usr/bin/avrg_arrays

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/fibonacci-app:latest .

      - name: Run Docker container
        run: |
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/fibonacci-app:latest -- 1 2 3 4

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/fibonacci-app:latest



